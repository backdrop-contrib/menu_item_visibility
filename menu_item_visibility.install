<?php

/**
 * @file
 * Install, update and uninstall functions for the menu_item_visibility module.
 */

/**
 * Implements hook_schema().
 */
function menu_item_visibility_schema() {
  $schema['menu_links_visibility_role'] = array(
    'fields' => array(
      'mlid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => "The menu link's ID from {menu_links}.mlid.",
      ),
      'role' => array(
        'type' => 'varchar',
        'length' => 64,
        'description' => 'Primary Key: The name of the role.',
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('mlid', 'role'),
    'indexes' => array(
      'role' => array('role'),
    ),
    'foreign keys' => array(
      'menu_links' => array(
        'table' => 'menu_links',
        'columns' => array('mlid' => 'mlid'),
      ),
      'role' => array(
        'table' => 'role',
        'columns' => array('role' => 'role'),
      ),
    ),
  );

  return $schema;
}

/**
 * Update role ids to role names.
 */
function menu_item_visibility_update_1000() {

  // Update role ID to be a varchar instead of an integer.
  if (db_field_exists('menu_links_visibility_role', 'rid')) {
    db_drop_primary_key('menu_links_visibility_role');
    db_drop_index('menu_links_visibility_role', 'rid');

    $role_column = array(
      'type' => 'varchar',
      'length' => 64,
      'description' => 'Primary Key: The name of the role.',
      'not null' => TRUE,
      'default' => '',
    );
    db_change_field('menu_links_visibility_role', 'rid', 'role', $role_column);

    db_add_primary_key('menu_links_visibility_role', array('mlid', 'role'));
    db_add_index('menu_links_visibility_role', 'role', array('role'));
  }

  // Update the menu_links_visibility_role table to match the new role names.
  $result = db_query('SELECT * FROM {menu_links_visibility_role}');
  foreach ($result as $row) {
    switch ($row->role) {
      case '1':
        $role = 'anonymous';
      break;
      case '2':
        $role = 'authenticated';
      break;
      case '3':
        $role = 'administrator';
      break;
      db_update('menu_links_visibility_role')
      ->fields(array(
        'role' => $role,
      ))
      ->condition('role', $row->role)
      ->execute();

      default:
        // TODO: what happens with custom roles?? we don't have their original relation rid->role name...
        break;
    }
  }
}
